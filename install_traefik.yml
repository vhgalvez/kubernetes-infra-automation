---
- name: Instalaci贸n y configuraci贸n de Traefik en los Balanceadores de Carga
  hosts: loadbalancer
  become: true
  vars:
    traefik_config_dir: /etc/traefik
    traefik_domain: "cefaslocalserver.com"
    letsencrypt_email: "tu-email@dominio.com"
    k3s_master_ip: "10.17.4.21"

  tasks:
    - name: Obtener todas las redes Docker existentes
      docker_network:
        name: "{{ item }}"
        state: absent
      loop: "{{ lookup('docker_networks') | selectattr('Name', 'ne', 'bridge') | map(attribute='Name') | list }}"

    - name: Obtener el token de K3s desde el master sin Python
      ansible.builtin.raw: "sudo cat /var/lib/rancher/k3s/server/node-token"
      delegate_to: "{{ k3s_master_ip }}"
      register: k3s_token_raw
      changed_when: false

    - name: Convertir token de K3s a variable usable
      ansible.builtin.set_fact:
        k3s_token: "{{ k3s_token_raw.stdout | trim }}"

    - name: Obtener el certificado del API de K3s desde el master
      ansible.builtin.raw: "sudo cat /var/lib/rancher/k3s/server/tls/server-ca.crt"
      delegate_to: "{{ k3s_master_ip }}"
      register: k3s_ca_cert_raw
      changed_when: false

    - name: Convertir certificado de K3s a variable usable
      ansible.builtin.set_fact:
        k3s_ca_cert: "{{ k3s_ca_cert_raw.stdout }}"

    - name: Asegurar que el directorio de Traefik existe
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar el token de K3s a los balanceadores
      ansible.builtin.copy:
        content: "{{ k3s_token }}"
        dest: "{{ traefik_config_dir }}/k3s_token"
        mode: "0600"

    - name: Copiar el certificado de K3s a los balanceadores
      ansible.builtin.copy:
        content: "{{ k3s_ca_cert }}"
        dest: "{{ traefik_config_dir }}/k8s-ca.crt"
        mode: "0600"

    - name: Verificar que el archivo `k3s_token` existe en los balanceadores
      ansible.builtin.stat:
        path: "{{ traefik_config_dir }}/k3s_token"
      register: k3s_token_check
      failed_when: not k3s_token_check.stat.exists

    - name: Verificar que el archivo `k8s-ca.crt` existe en los balanceadores
      ansible.builtin.stat:
        path: "{{ traefik_config_dir }}/k8s-ca.crt"
      register: k3s_cert_check
      failed_when: not k3s_cert_check.stat.exists

    - name: Crear `dynamic_conf.toml` si no existe
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}/dynamic_conf.toml"
        state: touch
        mode: "0600"

    - name: Escribir configuraci贸n inicial en `dynamic_conf.toml`
      ansible.builtin.copy:
        content: "[http.routers]\n"
        dest: "{{ traefik_config_dir }}/dynamic_conf.toml"
        mode: "0600"

    - name: Copiar configuraci贸n de Traefik
      ansible.builtin.template:
        src: templates/traefik.toml.j2
        dest: "{{ traefik_config_dir }}/traefik.toml"

    - name: Reiniciar Traefik
      ansible.builtin.shell:
        cmd: docker restart traefik || docker-compose up -d
        chdir: "{{ traefik_config_dir }}"
      become: true