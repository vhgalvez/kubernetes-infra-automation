---
- name: Instalaci贸n y configuraci贸n de Traefik en los Balanceadores de Carga
  hosts: loadbalancer
  become: true
  vars:
    traefik_config_dir: /etc/traefik
    docker_compose_file: /etc/traefik/docker-compose.yml
    acme_file: /etc/traefik/acme.json
    traefik_docker_image: "traefik:v3.2"
    letsencrypt_email: "tu-email@dominio.com"
    traefik_domain: "cefaslocalserver.com"
    k3s_master_ip: "10.17.4.21"
    docker_compose_version: "2.27.0"
    firewall_ports:
      - 80/tcp
      - 443/tcp
      - 8080/tcp
      - 6443/tcp

  tasks:
    - name: Obtener el token de K3s desde el master sin Python
      ansible.builtin.raw: "sudo cat /var/lib/rancher/k3s/server/node-token"
      delegate_to: "{{ k3s_master_ip }}"
      register: k3s_token
      changed_when: false

    - name: Obtener el certificado del API de K3s desde el master
      ansible.builtin.raw: "sudo cat /var/lib/rancher/k3s/server/tls/server-ca.crt"
      delegate_to: "{{ k3s_master_ip }}"
      register: k3s_ca_cert
      changed_when: false

    - name: Crear directorios para Traefik
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ traefik_config_dir }}"
        - "{{ traefik_config_dir }}/ssl"

    - name: Copiar el token de K3s a los balanceadores
      ansible.builtin.copy:
        content: "{{ k3s_token.stdout }}"
        dest: "/etc/traefik/k3s_token"
        mode: "0600"

    - name: Copiar el certificado de K3s a los balanceadores
      ansible.builtin.copy:
        content: "{{ k3s_ca_cert.stdout }}"
        dest: "/etc/traefik/k8s-ca.crt"
        mode: "0600"

    - name: Copiar configuraci贸n de Traefik
      ansible.builtin.template:
        src: templates/traefik.toml.j2
        dest: "{{ traefik_config_dir }}/traefik.toml"

    - name: Copiar configuraci贸n de Docker Compose
      ansible.builtin.template:
        src: templates/docker-compose.yml.j2
        dest: "{{ docker_compose_file }}"

    - name: Iniciar Traefik con Docker Compose
      ansible.builtin.shell:
        cmd: docker-compose up -d
        chdir: "{{ traefik_config_dir }}"

    - name: Configurar firewall (abrir puertos necesarios)
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop: "{{ firewall_ports }}"
      notify: Reload firewall

  handlers:
    - name: Reload firewall
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded