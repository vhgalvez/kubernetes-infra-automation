---
- name: Instalar y Configurar Traefik como Ingress Controller
  hosts: loadbalancer
  gather_facts: false
  become: true
  vars:
    traefik_config_dir: "/etc/traefik"
    traefik_namespace: "traefik"
    traefik_version: "v2.10"

  tasks:

    ### 游댮 SOLUCI칍N DEL PROBLEMA DE DOCKER 游댮 ###
    - name: Eliminar podman-docker si est치 instalado (evitar conflicto con Docker)
      ansible.builtin.package:
        name: podman-docker
        state: absent
      ignore_errors: yes

    - name: Limpiar paquetes en conflicto
      ansible.builtin.command: "dnf clean all"
      changed_when: false

    - name: Agregar repositorio de Docker
      ansible.builtin.shell: |
        dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Instalar Docker desde el repositorio oficial
      ansible.builtin.package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Iniciar y habilitar Docker
      service:
        name: docker
        state: started
        enabled: yes

    ### 游댳 CONFIGURACI칍N DE TRAEFIK 游댳 ###
    - name: Asegurar que el directorio de configuraci칩n de Traefik exista
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar configuraci칩n de Traefik
      ansible.builtin.template:
        src: templates/traefik.toml.j2
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"

    ### 游댳 DESPLEGAR TRAEFIK EN KUBERNETES 游댳 ###
    - name: Instalar la biblioteca Kubernetes en Python
      ansible.builtin.pip:
        name: kubernetes
        state: present

    - name: Crear namespace para Traefik
      ansible.builtin.command: "kubectl create namespace {{ traefik_namespace }} --dry-run=client -o yaml | kubectl apply -f -"
      changed_when: false

    - name: Desplegar Traefik como Ingress Controller en Kubernetes
      ansible.builtin.command: >
        kubectl apply -f - <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: traefik
          namespace: {{ traefik_namespace }}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: traefik
          template:
            metadata:
              labels:
                app: traefik
            spec:
              containers:
              - name: traefik
                image: traefik:{{ traefik_version }}
                args:
                - "--api.insecure=true"
                - "--providers.kubernetesingress=true"
                - "--entrypoints.web.address=:80"
                ports:
                - name: web
                  containerPort: 80
                  protocol: TCP
        EOF
      changed_when: false

    - name: Exponer Traefik con un LoadBalancer
      ansible.builtin.command: >
        kubectl apply -f - <<EOF
        apiVersion: v1
        kind: Service
        metadata:
          name: traefik
          namespace: {{ traefik_namespace }}
        spec:
          selector:
            app: traefik
          ports:
          - protocol: TCP
            port: 80
            targetPort: 80
          type: LoadBalancer
        EOF
      changed_when: false

    - name: Verificar si Traefik est치 en ejecuci칩n
      ansible.builtin.command: "kubectl get pods -n {{ traefik_namespace }}"
      register: traefik_status
      changed_when: false

    - name: Mostrar estado de Traefik
      ansible.builtin.debug:
        msg: "{{ traefik_status.stdout_lines }}"