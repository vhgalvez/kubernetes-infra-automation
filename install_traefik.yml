---
- name: Instalación y configuración de Traefik en LoadBalancer1
  hosts: loadbalancer
  become: true
  vars:
    traefik_config_dir: /etc/traefik
    docker_compose_file: /etc/traefik/docker-compose.yml
    acme_file: /etc/traefik/acme.json
    traefik_toml_file: /etc/traefik/traefik.toml
    traefik_docker_image: "traefik:v3.1"
    docker_compose_url: "https://github.com/docker/compose/releases/download/v2.30.3/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
    firewall_ports:
      - 80/tcp
      - 443/tcp
      - 8080/tcp
      - 6443/tcp

  tasks:
    # Paso 1: Preparar el Entorno
    - name: Actualizar paquetes del sistema
      ansible.builtin.shell: dnf update -y && dnf upgrade -y

    - name: Instalar dependencias necesarias
      ansible.builtin.yum:
        name:
          - epel-release
          - wget
          - vim
        state: present

    # Paso 2: Instalar Docker
    - name: Configurar el repositorio de Docker
      ansible.builtin.shell: |
        dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

    - name: Instalar Docker
      ansible.builtin.shell: |
        dnf install -y docker-ce docker-ce-cli containerd.io

    - name: Iniciar y habilitar Docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    # Paso 3: Instalar Docker Compose
    - name: Descargar Docker Compose
      ansible.builtin.get_url:
        url: "{{ docker_compose_url }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verificar instalación de Docker Compose
      ansible.builtin.command:
        cmd: /usr/local/bin/docker-compose --version

    - name: Añadir Docker Compose al PATH (permanente)
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: 'export PATH=$PATH:/usr/local/bin'
        state: present

    - name: Modificar secure_path para sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
        state: present
        insertafter: '^Defaults'

    # Paso 4: Configurar y Ejecutar Traefik con Docker Compose
    - name: Crear directorio de configuración de Traefik
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Crear archivo acme.json
      ansible.builtin.file:
        path: "{{ acme_file }}"
        state: touch
        mode: '0600'

    - name: Crear archivo de configuración traefik.toml
      ansible.builtin.template:
        src: templates/traefik.toml.j2
        dest: "{{ traefik_toml_file }}"
        mode: '0644'

    - name: Crear archivo docker-compose.yml
      ansible.builtin.template:
        src: templates/docker-compose.yml.j2
        dest: "{{ docker_compose_file }}"
        mode: '0644'

    - name: Iniciar Traefik con Docker Compose
      ansible.builtin.command:
        cmd: docker-compose up -d
        chdir: "{{ traefik_config_dir }}"

    # Paso 5: Configurar el Firewall
    - name: Abrir puertos en el firewall
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop: "{{ firewall_ports }}"
      notify: Reload firewall

  handlers:
    - name: Reload firewall
      ansible.builtin.service:
        name: firewalld
        state: reloaded