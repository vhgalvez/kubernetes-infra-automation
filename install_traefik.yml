---
- name: Instalación y configuración de Traefik en LoadBalancer1
  hosts: loadbalancer
  become: true
  vars:
    traefik_config_dir: /etc/traefik
    letsencrypt_dir: /etc/traefik/letsencrypt
    certs_dir: /etc/traefik/certs
    docker_compose_file: /etc/traefik/docker-compose.yml
    acme_file: /etc/traefik/letsencrypt/acme.json
    traefik_toml_file: /etc/traefik/traefik.toml
    traefik_docker_image: "traefik:v3.2"
    docker_compose_url: "https://github.com/docker/compose/releases/download/v2.30.3/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
    letsencrypt_email: "tu-email@dominio.com"
    traefik_domain: "loadbalancer1.cefaslocalserver.com"
    whoami_host: "whoami.localhost"
    cert_whoami_key: "{{ certs_dir }}/whoami.localhost.key"
    cert_whoami_crt: "{{ certs_dir }}/whoami.localhost.crt"
    cert_loadbalancer_key: "{{ certs_dir }}/loadbalancer1.cefaslocalserver.com.key"
    cert_loadbalancer_crt: "{{ certs_dir }}/loadbalancer1.cefaslocalserver.com.crt"
    firewall_ports:
      - 80/tcp
      - 443/tcp
      - 8080/tcp

  tasks:
    - name: Actualizar paquetes del sistema
      ansible.builtin.yum:
        name: "*"
        state: latest

    - name: Instalar dependencias necesarias
      ansible.builtin.yum:
        name:
          - epel-release
          - wget
          - vim
          - openssl
        state: present

    - name: Configurar el repositorio de Docker
      ansible.builtin.shell: |
        dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

    - name: Instalar Docker
      ansible.builtin.shell: |
        dnf install -y docker-ce docker-ce-cli containerd.io

    - name: Iniciar y habilitar Docker
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Verificar si Docker Compose está instalado
      ansible.builtin.stat:
        path: /usr/local/bin/docker-compose
      register: compose_check

    - name: Instalar Docker Compose si no está presente
      ansible.builtin.get_url:
        url: "{{ docker_compose_url }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      when: not compose_check.stat.exists

    - name: Crear directorios necesarios
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - "{{ traefik_config_dir }}"
        - "{{ letsencrypt_dir }}"
        - "{{ certs_dir }}"

    - name: Crear certificado autofirmado para whoami.localhost
      ansible.builtin.command:
        cmd: >
          openssl req -x509 -nodes -days 365 -newkey rsa:2048
          -keyout {{ cert_whoami_key }} -out {{ cert_whoami_crt }}
          -subj "/CN=whoami.localhost"
      args:
        creates: "{{ cert_whoami_key }}"

    - name: Crear certificado autofirmado para loadbalancer1.cefaslocalserver.com
      ansible.builtin.command:
        cmd: >
          openssl req -x509 -nodes -days 365 -newkey rsa:2048
          -keyout {{ cert_loadbalancer_key }} -out {{ cert_loadbalancer_crt }}
          -subj "/CN=loadbalancer1.cefaslocalserver.com"
      args:
        creates: "{{ cert_loadbalancer_key }}"

    - name: Crear archivo acme.json
      ansible.builtin.file:
        path: "{{ acme_file }}"
        state: touch
        mode: '0600'

    - name: Crear archivo de configuración traefik.toml
      ansible.builtin.template:
        src: templates/traefik.toml.j2
        dest: "{{ traefik_toml_file }}"

    - name: Crear archivo docker-compose.yml
      ansible.builtin.template:
        src: templates/docker-compose.yml.j2
        dest: "{{ docker_compose_file }}"

    - name: Iniciar Traefik con Docker Compose
      ansible.builtin.command:
        cmd: /usr/local/bin/docker-compose up -d
        chdir: "{{ traefik_config_dir }}"

    - name: Configurar Firewall
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop: "{{ firewall_ports }}"
      notify: Reload firewall

    - name: Agregar entrada en /etc/hosts para whoami.localhost
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ansible_host }} {{ whoami_host }}"
        state: present

  handlers:
    - name: Reload firewall
      ansible.builtin.service:
        name: firewalld
        state: reloaded