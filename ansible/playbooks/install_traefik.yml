---
- name: Instalar y Configurar Traefik como Ingress Controller en Docker
  hosts: load_balancers
  become: true
  vars:
    traefik_image: "traefik:v3.3"
    traefik_container_name: "traefik"
    traefik_config_dir: "/etc/traefik"
    traefik_domain: "traefik.local"
    letsencrypt_email: "tu-email@dominio.com"
    docker_compose_file: "/etc/traefik/docker-compose.yml"
    kubeconfig_temp_path: "/tmp/k3s.yaml"

  tasks:
    - name: Obtener kubeconfig desde master1
      ansible.builtin.slurp:
        src: /etc/rancher/k3s/k3s.yaml
      delegate_to: master1.cefaslocalserver.com
      register: k3s_kubeconfig_raw

    - name: Guardar kubeconfig en archivo local
      ansible.builtin.copy:
        dest: "{{ kubeconfig_temp_path }}"
        content: "{{ k3s_kubeconfig_raw['content'] | b64decode }}"
        mode: '0600'

    - name: Reemplazar server en kubeconfig con VIP
      ansible.builtin.replace:
        path: "{{ kubeconfig_temp_path }}"
        regexp: 'server: https://127.0.0.1:6443'
        replace: 'server: https://10.17.5.10:6443'

    - name: Verificar si Docker está instalado
      ansible.builtin.command: "docker -v"
      register: docker_installed
      ignore_errors: yes
      changed_when: false

    - name: Instalar Docker si no está instalado
      ansible.builtin.shell: |
        dnf install -y docker docker-compose && systemctl enable --now docker
      when: docker_installed.rc != 0

    - name: Crear directorio de configuración de Traefik
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}"
        state: directory
        mode: "0755"

    - name: Copiar kubeconfig al host de Traefik
      ansible.builtin.copy:
        src: "{{ kubeconfig_temp_path }}"
        dest: "{{ traefik_config_dir }}/kubeconfig"
        mode: "0600"

    - name: Crear archivo de configuración de Traefik
      ansible.builtin.template:
        src: "../../templates/traefik/traefik.toml.j2"
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"

    - name: Crear archivo acme.json para certificados SSL
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}/acme.json"
        state: touch
        mode: "0600"

    - name: Asegurar que el archivo acme.json tenga los permisos correctos
      ansible.builtin.file:
        path: "{{ traefik_config_dir }}/acme.json"
        mode: "0600"

    - name: Crear archivo docker-compose para Traefik
      ansible.builtin.template:
        src: "../../templates/traefik/docker-compose.yml.j2"
        dest: "{{ docker_compose_file }}"
        mode: "0644"

    - name: Detener y eliminar cualquier contenedor Traefik existente
      ansible.builtin.shell: |
        docker-compose -f {{ docker_compose_file }} down
      args:
        chdir: "{{ traefik_config_dir }}"
      ignore_errors: yes

    - name: Iniciar Traefik con Docker Compose
      ansible.builtin.shell: |
        docker-compose -f {{ docker_compose_file }} up -d
      args:
        chdir: "{{ traefik_config_dir }}"

    - name: Verificar si Traefik está corriendo
      ansible.builtin.command: "docker ps -f name={{ traefik_container_name }}"
      register: traefik_status
      changed_when: false

    - name: Mostrar estado de Traefik
      ansible.builtin.debug:
        msg: "{{ traefik_status.stdout_lines }}"