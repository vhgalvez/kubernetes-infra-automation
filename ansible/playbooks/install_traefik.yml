- name: Instalar y Configurar Traefik como Ingress Controller en Docker
  hosts: load_balancers
  become: true

  vars:
    traefik_config_dir: "/etc/traefik"
    traefik_home_tmp: "/tmp/kubeconfig"
    traefik_kubeconfig_from_master: "/etc/rancher/k3s/k3s.yaml"
    k3s_master_ip: "10.17.4.21"
    k8s_api_vip: "10.17.5.10"

  tasks:
    - name: Eliminar conflictos con Podman
      package:
        name: podman-docker
        state: absent

    - name: Añadir repo oficial Docker CE (solo AlmaLinux/RHEL/CentOS)
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
      when: ansible_os_family == "RedHat"

    - name: Instalar Docker CE y plugins
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Habilitar e iniciar Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Crear directorio de configuración de Traefik
      file:
        path: "{{ traefik_config_dir }}"
        state: directory
        mode: "0755"

    # Copiamos el kubeconfig desde master1 al controlador (localhost)
    - name: Obtener kubeconfig actualizado desde master1
      fetch:
        src: "{{ traefik_kubeconfig_from_master }}"
        dest: "{{ traefik_home_tmp }}"
        flat: yes
      delegate_to: "{{ k3s_master_ip }}"
      run_once: true

    - name: Reemplazar 127.0.0.1 por VIP en kubeconfig
      delegate_to: localhost
      run_once: true
      become: false
      replace:
        path: "{{ traefik_home_tmp }}"
        regexp: '127.0.0.1'
        replace: "{{ k8s_api_vip }}"

    - name: Crear ServiceAccount y ClusterRoleBinding para Traefik
      delegate_to: localhost
      run_once: true
      become: false
      environment:
        KUBECONFIG: "{{ traefik_home_tmp }}"
      shell: |
        kubectl -n kube-system create serviceaccount traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -
        kubectl create clusterrolebinding traefik-ingress-controller --clusterrole=cluster-admin --serviceaccount=kube-system:traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -

    - name: Obtener token para Traefik
      delegate_to: localhost
      run_once: true
      become: false
      environment:
        KUBECONFIG: "{{ traefik_home_tmp }}"
      shell: |
        TOKEN_NAME=$(kubectl -n kube-system get sa/traefik-ingress-controller -o jsonpath='{.secrets[0].name}')
        kubectl -n kube-system get secret $TOKEN_NAME -o jsonpath='{.data.token}' | base64 -d
      register: traefik_token_result

    - name: Copiar kubeconfig a nodos Traefik
      copy:
        src: "{{ traefik_home_tmp }}"
        dest: "{{ traefik_config_dir }}/kubeconfig"
        mode: "0644"

    - name: Crear archivo acme.json
      copy:
        dest: "{{ traefik_config_dir }}/acme.json"
        content: "{}"
        mode: "0600"

    - name: Crear archivo traefik.toml con el token
      template:
        src: "traefik/traefik.toml.j2"
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"
      vars:
        traefik_token: "{{ traefik_token_result.stdout }}"

    - name: Crear archivo docker-compose.yml
      template:
        src: "traefik/docker-compose.yml.j2"
        dest: "{{ traefik_config_dir }}/docker-compose.yml"
        mode: "0644"

    - name: Reiniciar contenedor Traefik
      shell: |
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml down || true
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml up -d
      args:
        executable: /bin/bash

    - name: Verificar estado de Traefik
      shell: docker ps -a | grep traefik
      register: traefik_status

    - name: Mostrar estado
      debug:
        msg: "{{ traefik_status.stdout_lines }}"