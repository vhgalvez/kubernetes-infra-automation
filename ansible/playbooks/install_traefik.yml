- name: Instalar y Configurar Traefik como Ingress Controller en Docker
  hosts: load_balancers
  become: true

  vars:
    traefik_config_dir: "/etc/traefik"
    traefik_home_tmp: "/tmp/kubeconfig"
    k8s_api_vip: "10.17.5.10"

  tasks:
    - name: Eliminar conflictos con Podman
      package:
        name: podman-docker
        state: absent

    - name: Añadir repo oficial Docker CE (solo AlmaLinux/RHEL/CentOS)
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
      when: ansible_os_family == "RedHat"

    - name: Instalar Docker CE
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Instalar Docker Compose plugin
      package:
        name: docker-compose-plugin
        state: present

    - name: Habilitar e iniciar Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Crear directorio de configuración de Traefik
      file:
        path: "{{ traefik_config_dir }}"
        state: directory
        mode: "0755"

    - name: Crear ServiceAccount y ClusterRoleBinding para Traefik (solo en localhost)
      delegate_to: localhost
      run_once: true
      become: false
      shell: |
        kubectl -n kube-system create serviceaccount traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -
        kubectl create clusterrolebinding traefik-ingress-controller --clusterrole=cluster-admin --serviceaccount=kube-system:traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -

    - name: Obtener token para Traefik (solo en localhost)
      delegate_to: localhost
      run_once: true
      become: false
      shell: |
        TOKEN_NAME=$(kubectl -n kube-system get sa/traefik-ingress-controller -o jsonpath='{.secrets[0].name}')
        kubectl -n kube-system get secret $TOKEN_NAME -o jsonpath='{.data.token}' | base64 -d
      register: traefik_token_result

    - name: Copiar kubeconfig al home temporalmente (solo en localhost)
      delegate_to: localhost
      run_once: true
      copy:
        src: "~/.kube/config"
        dest: "{{ traefik_home_tmp }}"
        mode: "0644"

    - name: Copiar kubeconfig a nodos Traefik
      copy:
        src: "{{ traefik_home_tmp }}"
        dest: "{{ traefik_config_dir }}/kubeconfig"
        mode: "0644"

    - name: Crear archivo acme.json
      copy:
        dest: "{{ traefik_config_dir }}/acme.json"
        content: "{}"
        mode: "0600"

    - name: Crear archivo traefik.toml con el token obtenido
      template:
        src: "traefik/traefik.toml.j2"
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"
      vars:
        traefik_token: "{{ traefik_token_result.stdout }}"

    - name: Crear archivo docker-compose.yml
      template:
        src: "traefik/docker-compose.yml.j2"
        dest: "{{ traefik_config_dir }}/docker-compose.yml"
        mode: "0644"

    - name: Reiniciar contenedor Traefik
      shell: |
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml down
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml up -d
      args:
        executable: /bin/bash

    - name: Verificar estado de Traefik
      shell: docker ps -a | grep traefik
      register: traefik_status

    - name: Mostrar resultado
      debug:
        msg: "{{ traefik_status.stdout_lines }}"
