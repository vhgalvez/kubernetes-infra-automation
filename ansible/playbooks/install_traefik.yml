---
- name: Generar certificados SSL para Traefik
  hosts: load_balancers
  become: true
  vars:
    certs_dir: "/etc/traefik/certs"
    cert_common_name: "traefik.local"
    wildcard_cert_name: "wildcard.traefik.local"

  tasks:
    - name: Asegurar que la biblioteca cryptography est√© instalada
      ansible.builtin.pip:
        name: cryptography
        state: present
        executable: pip3

    - name: Crear directorio de certificados
      ansible.builtin.file:
        path: "{{ certs_dir }}"
        state: directory
        mode: "0755"

    - name: Generar clave privada
      community.crypto.openssl_privatekey:
        path: "{{ certs_dir }}/{{ wildcard_cert_name }}.key"
        size: 2048
        mode: "0600"

    - name: Generar solicitud de certificado (CSR)
      community.crypto.openssl_csr:
        path: "{{ certs_dir }}/{{ wildcard_cert_name }}.csr"
        privatekey_path: "{{ certs_dir }}/{{ wildcard_cert_name }}.key"
        common_name: "{{ cert_common_name }}"
        organization_name: "MyOrg"

    - name: Generar certificado autofirmado
      community.crypto.x509_certificate:
        path: "{{ certs_dir }}/{{ wildcard_cert_name }}.crt"
        privatekey_path: "{{ certs_dir }}/{{ wildcard_cert_name }}.key"
        csr_path: "{{ certs_dir }}/{{ wildcard_cert_name }}.csr"
        provider: selfsigned
        selfsigned_not_after: "+3650d"
        subject:
          common_name: "{{ cert_common_name }}"
          organization_name: "MyOrg"
          country_name: "ES"
          state_or_province_name: "Madrid"
          locality_name: "Madrid"

    - name: Mostrar detalles del certificado generado
      ansible.builtin.command: "openssl x509 -in {{ certs_dir }}/{{ wildcard_cert_name }}.crt -noout -text"
      register: cert_info
      changed_when: false

    - name: Imprimir detalles del certificado
      ansible.builtin.debug:
        msg: "{{ cert_info.stdout }}"